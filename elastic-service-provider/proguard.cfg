

# 关闭代码压缩，避免删除未使用的类或成员
-dontshrink

# 关闭字节码级别的优化
-dontoptimize

# 避免生成大小写混合的类名
-dontusemixedcaseclassnames

# 采用唯一的类成员命名策略
-useuniqueclassmembernames

# 处理 `Class.forName("className")` 方式加载的类
-adaptclassstrings

# 保留异常、注解等信息
-keepattributes Exceptions,InnerClasses,Signature,Deprecated,SourceFile,LineNumberTable,*Annotation*,EnclosingMethod

# 保留接口名称
-keepnames interface ** { *; }

# 保留所有枚举类的成员和方法
-keepclassmembers enum * { *; }

# 保持所有公共类及其成员不变
-keep public class * {
    public protected *;
}

# 保持所有使用反射调用的类和方法
-keepclassmembers class * {
    *** get*();
    void set*(***);
    *** *(...);
}

# 特别针对 java.lang 和 java.util 包中的类
-keep class java.lang.** { *; }
-keep class java.util.** { *; }

# 保留 Spring 相关的核心注解，防止影响 Spring 运行
-keepclassmembers class * {
    @org.springframework.context.annotation.Bean *;
    @org.springframework.beans.factory.annotation.Autowired *;
    @org.springframework.beans.factory.annotation.Value *;
    @org.springframework.stereotype.Service *;
    @org.springframework.stereotype.Component *;
}

# 忽略警告信息
-ignorewarnings

# 忽略提示信息
-dontnote

# 打印最终的 ProGuard 配置信息
-printconfiguration

# 保留主类，防止入口类被混淆
-keep public class com.dipper.monitor.MonitorApplication {
    public static void main(java.lang.String[]);
}